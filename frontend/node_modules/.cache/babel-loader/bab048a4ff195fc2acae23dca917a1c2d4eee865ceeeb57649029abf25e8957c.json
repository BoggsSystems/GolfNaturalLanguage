{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\golf-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css'; // Make sure to create this file for custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [parsedInfo, setParsedInfo] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // State for loading indicator\n\n  const handleInputSubmit = async () => {\n    setIsLoading(true); // Show loading indicator\n    try {\n      const result = await axios.post(\"http://127.0.0.1:5000/api/parse_hole\", {\n        description: description\n      });\n      setParsedInfo(result.data.parsed_info);\n    } catch (error) {\n      console.error(\"Error parsing hole description\", error);\n    } finally {\n      setIsLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"golf-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"golf-header\",\n      children: \"Golf Round AI Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"golf-textarea\",\n      placeholder: \"Enter your hole description...\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInputSubmit,\n      className: \"golf-submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) // Display spinner while loading\n    , parsedInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"golf-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Parsed Hole Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: parsedInfo\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RVRkFcQWyTOTpgW1wkQJC2FIhhY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","description","setDescription","parsedInfo","setParsedInfo","isLoading","setIsLoading","handleInputSubmit","result","post","data","parsed_info","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Projects/golf-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css'; // Make sure to create this file for custom styles\n\nconst App = () => {\n  const [description, setDescription] = useState(\"\");\n  const [parsedInfo, setParsedInfo] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // State for loading indicator\n\n  const handleInputSubmit = async () => {\n    setIsLoading(true); // Show loading indicator\n    try {\n      const result = await axios.post(\"http://127.0.0.1:5000/api/parse_hole\", {\n        description: description,\n      });\n\n      setParsedInfo(result.data.parsed_info);\n    } catch (error) {\n      console.error(\"Error parsing hole description\", error);\n    } finally {\n      setIsLoading(false); // Hide loading indicator\n    }\n  };\n\n  return (\n    <div className=\"golf-app-container\">\n      <h1 className=\"golf-header\">Golf Round AI Assistant</h1>\n      <textarea\n        className=\"golf-textarea\"\n        placeholder=\"Enter your hole description...\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <button onClick={handleInputSubmit} className=\"golf-submit-button\">\n        Submit\n      </button>\n      \n      {isLoading && (\n        <div className=\"spinner\"></div> // Display spinner while loading\n      )}\n\n      {parsedInfo && (\n        <div className=\"golf-result\">\n          <h2>Parsed Hole Information:</h2>\n          <div dangerouslySetInnerHTML={{ __html: parsedInfo }} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,IAAI;MACF,MAAME,MAAM,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,sCAAsC,EAAE;QACtER,WAAW,EAAEA;MACf,CAAC,CAAC;MAEFG,aAAa,CAACI,MAAM,CAACE,IAAI,CAACC,WAAW,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAKgB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCjB,OAAA;MAAIgB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDrB,OAAA;MACEgB,SAAS,EAAC,eAAe;MACzBM,WAAW,EAAC,gCAAgC;MAC5CC,KAAK,EAAEpB,WAAY;MACnBqB,QAAQ,EAAGC,CAAC,IAAKrB,cAAc,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFrB,OAAA;MAAQ2B,OAAO,EAAElB,iBAAkB;MAACO,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAEnE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERd,SAAS,iBACRP,OAAA;MAAKgB,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC;IACjC,EAEAhB,UAAU,iBACTL,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BjB,OAAA;QAAAiB,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCrB,OAAA;QAAK4B,uBAAuB,EAAE;UAAEC,MAAM,EAAExB;QAAW;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7CID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}